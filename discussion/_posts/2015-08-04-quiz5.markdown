---
layout: post
title:  "Discussion 5 Quiz"
date:   2016-07-05 13:00:00
categories: quizzes
---

[This week's slides](https://docs.google.com/presentation/d/132hKvcz5OPqOiJfBFuOjTflGQzJS6_DGwCPsU0qUNo8/edit?usp=sharing)  
[Link to form](https://docs.google.com/a/berkeley.edu/forms/d/1Pj2oU_nOk7LV3oxGd32Qrk6ZaWlQDa_HZE_211K3Bd8/viewform)

---

### Concepts
1. A list and a dictionary both contain values. How are they different?
2. Are dictionaries mutable?

<a class="btn btn-default solution-toggle">TOGGLE SOLUTION</a>

<blockquote class="solution">
1. A dictionary is an unordered collection of mappings, while lists are sequences of elements with indices. Dictionaries store values by pairing them with keys.<br/>
2. Yes. You can change the values paired with some key or add a new pairing.
</blockquote>

---

### WWPP  
Write what the Python interpreter would output after the following lines are input. If there is an error, write 'Error'.
{% highlight python %}
>>> for x in {1:2, 3:4, 4:5}:
...    	d = {}
... 	d[x] = x*2
... 	print(d)

>>> cars = {'toyota': ['prius','fj cruiser'], 'audi': ['a7','s8'] , 'tesla': ['model s','model x']}
>>> cars[0]

>>> 'a7' in cars

>>> 'audi' in cars

>>> some_cars = []
>>> for car in cars:
...     some_cars.append(cars[car].pop(0))
>>> some_cars # any order is okay

{% endhighlight %}

<a class="btn btn-default solution-toggle-2">TOGGLE SOLUTION</a>

<blockquote class="solution-2">{% highlight python %}
>>> for x in {1:2, 3:4, 4:5}:
...    	d = {}
... 	d[x] = x*2
... 	print(d)
{1:1}
{3:9}
{4:16}
>>> cars = {'toyota': ['prius','fj cruiser'], 'audi': ['a7','s8'] , 'tesla': ['model s','model x']}
>>> cars[0]
Error
>>> 'a7' in cars
False
>>> 'audi' in cars
True
>>> some_cars = []
>>> for car in cars:
...     some_cars.append(cars[car].pop(0))
>>> some_cars
['prius', 'a7', 'model s']
{% endhighlight %}
</blockquote>

---

### Code Writing
Write the function `replace_all_deep` from today's discussion worksheet. It takes in a dictionary and replaces all values that are equal to `x` with `y`. Values may also be dictionaries, in which case you must replace all `x`'s within those nested dictionaries.

{% highlight python %}
def replace_all_deep(d, x, y):
    """
    >>> d = {1: {2: 3, 3: 4}, 2: {4: 4, 5: 3}}
    >>> replace_all_deep(d, 3, 1)
    >>> d
    {1: {2: 1, 3: 4}, 2: {4: 4, 5: 1}}
    """
{% endhighlight %}

<a class="btn btn-default solution-toggle-3">TOGGLE SOLUTION</a>

<blockquote class="solution-3">{% highlight python %}
def replace_all_deep(d, x, y):
    for key in d:
        if d[key] == x:
            d[key] = y
        elif type(d[key]) == dict:
            replace_all_deep(d[key], x, y)
{% endhighlight %}
</blockquote>
