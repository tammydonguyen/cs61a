---
layout: post
title:  "Discussion 8"
date:   2016-11-03 11:00:00
published: false
---

# Links

[Slides](https://docs.google.com/presentation/d/1qBEh2tABg6raGjb1ScWw3BMdaG6J7SsIXMHPHv5CIpA/edit?usp=sharing)  
[Attendance and feedback](https://docs.google.com/forms/d/e/1FAIpQLSceJGA5gcgaUSMQAUpYukLjnFZWM9zvONRBG8h08sJfdq-pwA/viewform)  

---

# Concepts  
1. What is the relationship between a class and an instance?
2. What is the difference between an instance attribute and a class attribute?
3. What is the difference between a class method and a local function?
4. What happens if you try to change a class attribute while accessing it from an instance?
5. When you call a method using dot notation on an instance, what parameter can you omit? When you call a method using dot notation on a class, can you omit this same parameter?
6. A subclass inherits what from its superclass?

---

# Problems  

## Question 1

Try out the WWPD at the end of this [guide](/cs61a-resources/guides/oop.html).

## Question 2  

Take a look at the two classes below and figure out what Python would output. Try drawing out a diagram to keep track of changing attributes!
{% highlight python %}
class Random:
    x = 0

    def __init__(self, x, y):
        Random.x = x
        self.x = y

    def foo(self):
        return Random.x + self.x

class Randomer(Random):
    x = 3

    def bar(self, y):
        self.x = y
        return self.foo()
{% endhighlight %}

{% highlight python %}
>>> lol = Random(2, 3)
>>> wtf = Randomer(4, 5)
>>> lol.x

>>> lol.y

>>> Random.x

>>> wtf.bar(10)

>>> wtf.x

>>> Random.foo(lol)

>>> lol.bar(1000000)

{% endhighlight %}

<a class="btn btn-default solution-toggle-2">TOGGLE SOLUTION</a>

<blockquote class="solution-2">{% highlight python %}
>>> lol = Random(2, 3)
>>> wtf = Randomer(4, 5)
>>> lol.x
3
>>> lol.y
Error
>>> Random.x
4
>>> wtf.bar(10)
14
>>> wtf.x
10
>>> Random.foo(lol)
7
>>> lol.bar(1000000)
Error
{% endhighlight %}
</blockquote>
