import heapq

class MedianFinder:
    def __init__(self):
        """
        Initialize your data structure here.
        """
        self.leftHeap = []
        self.rightHeap = []

    def addNum(self, num):
        """
        Adds a num into the data structure.
        :type num: int
        :rtype: void
        """
        if len(self.leftHeap) <= len(self.rightHeap):
            heapq.heappush(self.leftHeap, -num)
        else:
            heapq.heappush(self.rightHeap, num)

    def findMedian(self):
        """
        Returns the median of current data stream
        :rtype: float
        >>> mf = MedianFinder()
        >>> mf.addNum(1)
        >>> mf.findMedian()
        >>> mf.addNum(3)
        >>> mf.addNum(5)
        >>> mf.findMedian()
        """
        if len(self.leftHeap) > len(self.rightHeap):
            return heapq.heappop(self.leftHeap)
        else:
            left = heapq.heappop(self.leftHeap)
            right = heapq.heappop(self.rightHeap)
            return (left + right) / 2.0
        